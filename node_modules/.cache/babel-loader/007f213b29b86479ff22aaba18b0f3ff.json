{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport assert from '../assert';\nimport TransitionInterpolator from './transition-interpolator';\nimport { flyToViewport } from 'viewport-mercator-project';\nimport { isValid, getEndValueByShortestPath } from './transition-utils';\nimport { lerp } from '../math-utils';\nvar VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\nvar REQUIRED_PROPS = ['latitude', 'longitude', 'zoom', 'width', 'height'];\nvar LINEARLY_INTERPOLATED_PROPS = ['bearing', 'pitch'];\n\nvar ViewportFlyToInterpolator = function (_TransitionInterpolat) {\n  _inherits(ViewportFlyToInterpolator, _TransitionInterpolat);\n\n  function ViewportFlyToInterpolator() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ViewportFlyToInterpolator);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ViewportFlyToInterpolator)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"propNames\", VIEWPORT_TRANSITION_PROPS);\n\n    return _this;\n  }\n\n  _createClass(ViewportFlyToInterpolator, [{\n    key: \"initializeProps\",\n    value: function initializeProps(startProps, endProps) {\n      var startViewportProps = {};\n      var endViewportProps = {};\n\n      for (var _i = 0, _REQUIRED_PROPS = REQUIRED_PROPS; _i < _REQUIRED_PROPS.length; _i++) {\n        var key = _REQUIRED_PROPS[_i];\n        var startValue = startProps[key];\n        var endValue = endProps[key];\n        assert(isValid(startValue) && isValid(endValue), \"\".concat(key, \" must be supplied for transition\"));\n        startViewportProps[key] = startValue;\n        endViewportProps[key] = getEndValueByShortestPath(key, startValue, endValue);\n      }\n\n      for (var _i2 = 0, _LINEARLY_INTERPOLATE = LINEARLY_INTERPOLATED_PROPS; _i2 < _LINEARLY_INTERPOLATE.length; _i2++) {\n        var _key2 = _LINEARLY_INTERPOLATE[_i2];\n\n        var _startValue = startProps[_key2] || 0;\n\n        var _endValue = endProps[_key2] || 0;\n\n        startViewportProps[_key2] = _startValue;\n        endViewportProps[_key2] = getEndValueByShortestPath(_key2, _startValue, _endValue);\n      }\n\n      return {\n        start: startViewportProps,\n        end: endViewportProps\n      };\n    }\n  }, {\n    key: \"interpolateProps\",\n    value: function interpolateProps(startProps, endProps, t) {\n      var viewport = flyToViewport(startProps, endProps, t);\n\n      for (var _i3 = 0, _LINEARLY_INTERPOLATE2 = LINEARLY_INTERPOLATED_PROPS; _i3 < _LINEARLY_INTERPOLATE2.length; _i3++) {\n        var key = _LINEARLY_INTERPOLATE2[_i3];\n        viewport[key] = lerp(startProps[key], endProps[key], t);\n      }\n\n      return viewport;\n    }\n  }]);\n\n  return ViewportFlyToInterpolator;\n}(TransitionInterpolator);\n\nexport { ViewportFlyToInterpolator as default };","map":{"version":3,"sources":["../../../../src/utils/transition/viewport-fly-to-interpolator.js"],"names":["VIEWPORT_TRANSITION_PROPS","REQUIRED_PROPS","LINEARLY_INTERPOLATED_PROPS","ViewportFlyToInterpolator","TransitionInterpolator","startProps","endProps","startViewportProps","endViewportProps","key","startValue","endValue","assert","isValid","getEndValueByShortestPath","start","end","t","viewport","flyToViewport","lerp"],"mappings":";;;;;;;AACA,OAAA,MAAA,MAAA,WAAA;AACA,OAAA,sBAAA,MAAA,2BAAA;AAEA,SAAA,aAAA,QAAA,2BAAA;AACA,SAAA,OAAA,EAAA,yBAAA,QAAA,oBAAA;AACA,SAAA,IAAA,QAAA,eAAA;AAIA,IAAMA,yBAAyB,GAAG,CAAA,WAAA,EAAA,UAAA,EAAA,MAAA,EAAA,SAAA,EAAlC,OAAkC,CAAlC;AACA,IAAMC,cAAc,GAAG,CAAA,UAAA,EAAA,WAAA,EAAA,MAAA,EAAA,OAAA,EAAvB,QAAuB,CAAvB;AACA,IAAMC,2BAA2B,GAAG,CAAA,SAAA,EAApC,OAAoC,CAApC;;IASqBC,yB;;;;;;;;;;;;;;;;gEACPH,yB;;;;;;;oCAEIK,U,EAA2BC,Q,EAAyB;AAClE,UAAMC,kBAAkB,GAAxB,EAAA;AACA,UAAMC,gBAAgB,GAAtB,EAAA;;AAGA,WAAA,IAAA,EAAA,GAAA,CAAA,EAAA,eAAA,GAAA,cAAA,EAAA,EAAA,GAAA,eAAA,CAAA,MAAA,EAAA,EAAA,EAAA,EAAkC;AAA7B,YAAMC,GAAG,GAAA,eAAA,CAAT,EAAS,CAAT;AACH,YAAMC,UAAU,GAAGL,UAAU,CAA7B,GAA6B,CAA7B;AACA,YAAMM,QAAQ,GAAGL,QAAQ,CAAzB,GAAyB,CAAzB;AACAM,QAAAA,MAAM,CAACC,OAAO,CAAPA,UAAO,CAAPA,IAAuBA,OAAO,CAA/B,QAA+B,CAA/B,EAAA,GAAA,MAAA,CAAA,GAAA,EAAND,kCAAM,CAAA,CAANA;AACAL,QAAAA,kBAAkB,CAAlBA,GAAkB,CAAlBA,GAAAA,UAAAA;AACAC,QAAAA,gBAAgB,CAAhBA,GAAgB,CAAhBA,GAAwBM,yBAAyB,CAAA,GAAA,EAAA,UAAA,EAAjDN,QAAiD,CAAjDA;AACD;;AAED,WAAA,IAAA,GAAA,GAAA,CAAA,EAAA,qBAAA,GAAA,2BAAA,EAAA,GAAA,GAAA,qBAAA,CAAA,MAAA,EAAA,GAAA,EAAA,EAA+C;AAA1C,YAAMC,KAAG,GAAA,qBAAA,CAAT,GAAS,CAAT;;AACH,YAAMC,WAAU,GAAGL,UAAU,CAAVA,KAAU,CAAVA,IAAnB,CAAA;;AACA,YAAMM,SAAQ,GAAGL,QAAQ,CAARA,KAAQ,CAARA,IAAjB,CAAA;;AACAC,QAAAA,kBAAkB,CAAlBA,KAAkB,CAAlBA,GAAAA,WAAAA;AACAC,QAAAA,gBAAgB,CAAhBA,KAAgB,CAAhBA,GAAwBM,yBAAyB,CAAA,KAAA,EAAA,WAAA,EAAjDN,SAAiD,CAAjDA;AACD;;AAED,aAAO;AACLO,QAAAA,KAAK,EADA,kBAAA;AAELC,QAAAA,GAAG,EAAER;AAFA,OAAP;AAID;;;qCAEgBH,U,EAA2BC,Q,EAAyBW,C,EAAW;AAC9E,UAAMC,QAAQ,GAAGC,aAAa,CAAA,UAAA,EAAA,QAAA,EAA9B,CAA8B,CAA9B;;AAGA,WAAA,IAAA,GAAA,GAAA,CAAA,EAAA,sBAAA,GAAA,2BAAA,EAAA,GAAA,GAAA,sBAAA,CAAA,MAAA,EAAA,GAAA,EAAA,EAA+C;AAA1C,YAAMV,GAAG,GAAA,sBAAA,CAAT,GAAS,CAAT;AACHS,QAAAA,QAAQ,CAARA,GAAQ,CAARA,GAAgBE,IAAI,CAACf,UAAU,CAAX,GAAW,CAAX,EAAkBC,QAAQ,CAA1B,GAA0B,CAA1B,EAApBY,CAAoB,CAApBA;AACD;;AAED,aAAA,QAAA;AACD;;;;EAtCoDd,sB;;SAAlCD,yB","sourcesContent":["// @flow\nimport assert from '../assert';\nimport TransitionInterpolator from './transition-interpolator';\n\nimport {flyToViewport} from 'viewport-mercator-project';\nimport {isValid, getEndValueByShortestPath} from './transition-utils';\nimport {lerp} from '../math-utils';\n\nimport type {MapStateProps} from '../map-state';\n\nconst VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\nconst REQUIRED_PROPS = ['latitude', 'longitude', 'zoom', 'width', 'height'];\nconst LINEARLY_INTERPOLATED_PROPS = ['bearing', 'pitch'];\n\n/**\n * This class adapts mapbox-gl-js Map#flyTo animation so it can be used in\n * react/redux architecture.\n * mapbox-gl-js flyTo : https://www.mapbox.com/mapbox-gl-js/api/#map#flyto.\n * It implements “Smooth and efficient zooming and panning.” algorithm by\n * \"Jarke J. van Wijk and Wim A.A. Nuij\"\n */\nexport default class ViewportFlyToInterpolator extends TransitionInterpolator {\n  propNames = VIEWPORT_TRANSITION_PROPS;\n\n  initializeProps(startProps: MapStateProps, endProps: MapStateProps) {\n    const startViewportProps = {};\n    const endViewportProps = {};\n\n    // Check minimum required props\n    for (const key of REQUIRED_PROPS) {\n      const startValue = startProps[key];\n      const endValue = endProps[key];\n      assert(isValid(startValue) && isValid(endValue), `${key} must be supplied for transition`);\n      startViewportProps[key] = startValue;\n      endViewportProps[key] = getEndValueByShortestPath(key, startValue, endValue);\n    }\n\n    for (const key of LINEARLY_INTERPOLATED_PROPS) {\n      const startValue = startProps[key] || 0;\n      const endValue = endProps[key] || 0;\n      startViewportProps[key] = startValue;\n      endViewportProps[key] = getEndValueByShortestPath(key, startValue, endValue);\n    }\n\n    return {\n      start: startViewportProps,\n      end: endViewportProps\n    };\n  }\n\n  interpolateProps(startProps: MapStateProps, endProps: MapStateProps, t: number) {\n    const viewport = flyToViewport(startProps, endProps, t);\n\n    // Linearly interpolate 'bearing' and 'pitch' if exist.\n    for (const key of LINEARLY_INTERPOLATED_PROPS) {\n      viewport[key] = lerp(startProps[key], endProps[key], t);\n    }\n\n    return viewport;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}