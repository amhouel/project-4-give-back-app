{"ast":null,"code":"import _regeneratorRuntime from \"/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/src/VolunteerExperienceList/index.js\";\nimport React, { Component } from 'react';\nimport VolunteerComingExperience from '../VolunteerComingExperience';\nimport VolunteerPastExperience from '../VolunteerPastExperience';\nimport './style.css';\n\nvar VolunteerExperienceList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(VolunteerExperienceList, _Component);\n\n  function VolunteerExperienceList(props) {\n    var _this;\n\n    _classCallCheck(this, VolunteerExperienceList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VolunteerExperienceList).call(this, props));\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.getUser();\n\n              _this.getVolunteerComingExperiences();\n\n              _this.getVolunteerPastExperiences();\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.getVolunteerComingExperiences =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var comingExperiences;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch('/api/volunteer/experiences/coming', {\n                headers: {\n                  'jwt-token': localStorage.getItem('user-jwt')\n                }\n              });\n\n            case 2:\n              _context2.next = 4;\n              return _context2.sent.json();\n\n            case 4:\n              comingExperiences = _context2.sent;\n\n              _this.setState({\n                comingExperiences: comingExperiences\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    _this.getVolunteerPastExperiences =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var pastExperiences;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return fetch('/api/volunteer/experiences/past', {\n                headers: {\n                  'jwt-token': localStorage.getItem('user-jwt')\n                }\n              });\n\n            case 2:\n              _context3.next = 4;\n              return _context3.sent.json();\n\n            case 4:\n              pastExperiences = _context3.sent;\n\n              _this.setState({\n                pastExperiences: pastExperiences\n              });\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    _this.getVolunteerPastExperience =\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(id) {\n        var pastExperience;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return fetch('/api/volunteer/experience/past', {\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'jwt-token': localStorage.getItem('user-jwt')\n                  }\n                });\n\n              case 2:\n                _context4.next = 4;\n                return _context4.sent.json();\n\n              case 4:\n                pastExperience = _context4.sent;\n\n                _this.setState({\n                  pastExperienceRating: pastExperience.rating,\n                  pastExperienceComment: pastExperience.comment ? pastExperience.comment : _this.state.pastExperienceComment\n                });\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this.getUser =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      var user;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return fetch('/api/volunteer', {\n                method: \"GET\",\n                headers: {\n                  \"jwt-token\": localStorage.getItem('user-jwt')\n                }\n              });\n\n            case 2:\n              _context5.next = 4;\n              return _context5.sent.json();\n\n            case 4:\n              user = _context5.sent;\n\n              _this.setState({\n                user: user\n              });\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n\n    _this.deleteExperience =\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(id) {\n        var deletedExperience;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return fetch('/api/volunteer/experiences', {\n                  method: \"DELETE\",\n                  body: JSON.stringify({\n                    experienceId: id\n                  }),\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'jwt-token': localStorage.getItem('user-jwt')\n                  }\n                });\n\n              case 2:\n                deletedExperience = _context6.sent;\n\n                _this.getVolunteerComingExperiences();\n\n                _this.getVolunteerPastExperiences();\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      return function (_x2) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    _this.updateRating = function (rating) {\n      _this.setState({\n        pastExperienceRating: rating\n      });\n    };\n\n    _this.updateComment = function (comment) {\n      _this.setState({\n        pastExperienceComment: comment\n      });\n    };\n\n    _this.completedExperience =\n    /*#__PURE__*/\n    function () {\n      var _ref7 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(id) {\n        var body, pastExperience;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                body = JSON.stringify({\n                  experienceId: id,\n                  rating: _this.state.pastExperienceRating,\n                  comment: _this.state.pastExperienceComment\n                });\n                _context7.next = 3;\n                return fetch('/api/volunteer/experiences', {\n                  method: \"POST\",\n                  body: body,\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'jwt-token': localStorage.getItem('user-jwt')\n                  }\n                });\n\n              case 3:\n                pastExperience = _context7.sent;\n\n                _this.getVolunteerComingExperiences();\n\n                _this.getVolunteerPastExperiences();\n\n              case 6:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      return function (_x3) {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n\n    _this.getstarRating = function (id) {\n      _this.getVolunteerPastExperience(id);\n\n      var starRating = '';\n\n      for (var i = 0; i <= _this.state.pastExperienceRating; i++) {\n        starRating += '⭐️';\n      }\n\n      return starRating;\n    };\n\n    _this.state = {\n      user: {},\n      comingExperiences: [],\n      pastExperiences: [],\n      pastExperienceRating: undefined,\n      pastExperienceComment: 'No comment added'\n    };\n    return _this;\n  }\n\n  _createClass(VolunteerExperienceList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"volunteer-experiences\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"volunteer-experiences-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"My Volunteering Experiences\"), React.createElement(\"h3\", {\n        className: \"volunteer-experiences-subtitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Coming experiences:\"), this.state.comingExperiences.length === 0 && React.createElement(\"p\", {\n        className: \"no-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"No coming experiences recorded!\"), React.createElement(\"ul\", {\n        className: \"volunteer-coming-experiences-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, this.state.comingExperiences.length > 0 && this.state.comingExperiences.map(function (comingExperience) {\n        var count = 0;\n        return React.createElement(VolunteerComingExperience, {\n          key: comingExperience.id - \"\".concat(count += 1),\n          id: comingExperience.id,\n          title: comingExperience.title,\n          rating: _this2.state.pastExperienceRating,\n          comment: _this2.state.pastExperienceComment,\n          updateRating: _this2.updateRating,\n          updateComment: _this2.updateComment,\n          deleteExperience: function deleteExperience() {\n            return _this2.deleteExperience(comingExperience.id);\n          },\n          completedExperience: function completedExperience() {\n            return _this2.completedExperience(comingExperience.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        });\n      })), React.createElement(\"h3\", {\n        className: \"volunteer-experiences-subtitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Past experiences:\"), this.state.pastExperiences.length === 0 && React.createElement(\"p\", {\n        className: \"no-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"No past experiences recorded!\"), React.createElement(\"ul\", {\n        className: \"volunteer-past-experiences-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, this.state.pastExperiences.length > 0 && this.state.pastExperiences.map(function (pastExperience) {\n        var count = 0;\n        return React.createElement(VolunteerPastExperience, {\n          key: pastExperience.id - \"\".concat(count += 1),\n          id: pastExperience.id,\n          title: pastExperience.title,\n          rating: _this2.state.pastExperienceRating,\n          comment: _this2.state.pastExperienceComment,\n          deleteExperience: function deleteExperience() {\n            return _this2.deleteExperience(pastExperience.id);\n          },\n          ratingStars: _this2.getstarRating,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return VolunteerExperienceList;\n}(Component);\n\nexport default VolunteerExperienceList;","map":{"version":3,"sources":["/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/src/VolunteerExperienceList/index.js"],"names":["React","Component","VolunteerComingExperience","VolunteerPastExperience","VolunteerExperienceList","props","componentDidMount","getUser","getVolunteerComingExperiences","getVolunteerPastExperiences","fetch","headers","localStorage","getItem","json","comingExperiences","setState","pastExperiences","getVolunteerPastExperience","id","pastExperience","pastExperienceRating","rating","pastExperienceComment","comment","state","method","user","deleteExperience","body","JSON","stringify","experienceId","deletedExperience","updateRating","updateComment","completedExperience","getstarRating","starRating","i","undefined","length","map","comingExperience","count","title"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,yBAAP,MAAsC,8BAAtC;AACA,OAAOC,uBAAP,MAAoC,4BAApC;AACA,OAAO,aAAP;;IAEMC,uB;;;;;AACF,mCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iGAAMA,KAAN;AADe,UAYnBC,iBAZmB;AAAA;AAAA;AAAA;AAAA,6BAYC;AAAA;AAAA;AAAA;AAAA;AAChB,oBAAKC,OAAL;;AACA,oBAAKC,6BAAL;;AACA,oBAAKC,2BAAL;;AAHgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAZD;AAAA,UAkBnBD,6BAlBmB;AAAA;AAAA;AAAA;AAAA,6BAkBa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACWE,KAAK,CAAC,mCAAD,EAAsC;AAC9EC,gBAAAA,OAAO,EAAE;AACL,+BAAaC,YAAY,CAACC,OAAb,CAAqB,UAArB;AADR;AADqE,eAAtC,CADhB;;AAAA;AAAA;AAAA,oCAKxBC,IALwB;;AAAA;AACtBC,cAAAA,iBADsB;;AAM5B,oBAAKC,QAAL,CAAc;AACVD,gBAAAA,iBAAiB,EAAEA;AADT,eAAd;;AAN4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAlBb;AAAA,UA6BnBN,2BA7BmB;AAAA;AAAA;AAAA;AAAA,6BA6BW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACWC,KAAK,CAAC,iCAAD,EAAoC;AAC1EC,gBAAAA,OAAO,EAAE;AACL,+BAAaC,YAAY,CAACC,OAAb,CAAqB,UAArB;AADR;AADiE,eAApC,CADhB;;AAAA;AAAA;AAAA,oCAKtBC,IALsB;;AAAA;AACpBG,cAAAA,eADoB;;AAM1B,oBAAKD,QAAL,CAAc;AACVC,gBAAAA,eAAe,EAAEA;AADP,eAAd;;AAN0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA7BX;;AAAA,UAwCnBC,0BAxCmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAwCU,kBAAMC,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACWT,KAAK,CAAC,gCAAD,EAAmC;AACxEC,kBAAAA,OAAO,EAAE;AACL,oCAAgB,kBADX;AAEL,iCAAaC,YAAY,CAACC,OAAb,CAAqB,UAArB;AAFR;AAD+D,iBAAnC,CADhB;;AAAA;AAAA;AAAA,sCAMrBC,IANqB;;AAAA;AACnBM,gBAAAA,cADmB;;AAOzB,sBAAKJ,QAAL,CAAc;AACVK,kBAAAA,oBAAoB,EAAED,cAAc,CAACE,MAD3B;AAEVC,kBAAAA,qBAAqB,EAAEH,cAAc,CAACI,OAAf,GAAyBJ,cAAc,CAACI,OAAxC,GAAkD,MAAKC,KAAL,CAAWF;AAF1E,iBAAd;;AAPyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAxCV;;AAAA;AAAA;AAAA;AAAA;;AAAA,UAqDnBhB,OArDmB;AAAA;AAAA;AAAA;AAAA,6BAqDT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACoBG,KAAK,CAAC,gBAAD,EAAmB;AAC9CgB,gBAAAA,MAAM,EAAE,KADsC;AAE9Cf,gBAAAA,OAAO,EAAE;AACL,+BAAaC,YAAY,CAACC,OAAb,CAAqB,UAArB;AADR;AAFqC,eAAnB,CADzB;;AAAA;AAAA;AAAA,oCAMFC,IANE;;AAAA;AACAa,cAAAA,IADA;;AAON,oBAAKX,QAAL,CAAc;AACVW,gBAAAA,IAAI,EAAEA;AADI,eAAd;;AAPM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KArDS;;AAAA,UAiEnBC,gBAjEmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAiEA,kBAAOT,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACiBT,KAAK,CAAC,4BAAD,EAA+B;AAChEgB,kBAAAA,MAAM,EAAE,QADwD;AAEhEG,kBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,oBAAAA,YAAY,EAAEb;AAAhB,mBAAf,CAF0D;AAGhER,kBAAAA,OAAO,EAAE;AACL,oCAAgB,kBADX;AAEL,iCAAaC,YAAY,CAACC,OAAb,CAAqB,UAArB;AAFR;AAHuD,iBAA/B,CADtB;;AAAA;AACToB,gBAAAA,iBADS;;AASf,sBAAKzB,6BAAL;;AACA,sBAAKC,2BAAL;;AAVe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAjEA;;AAAA;AAAA;AAAA;AAAA;;AAAA,UA8EnByB,YA9EmB,GA8EJ,UAACZ,MAAD,EAAY;AACvB,YAAKN,QAAL,CAAc;AACVK,QAAAA,oBAAoB,EAAEC;AADZ,OAAd;AAGH,KAlFkB;;AAAA,UAoFnBa,aApFmB,GAoFH,UAACX,OAAD,EAAa;AACzB,YAAKR,QAAL,CAAc;AACVO,QAAAA,qBAAqB,EAAEC;AADb,OAAd;AAGH,KAxFkB;;AAAA,UA0FnBY,mBA1FmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BA0FG,kBAAOjB,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACZU,gBAAAA,IADY,GACLC,IAAI,CAACC,SAAL,CAAe;AACxBC,kBAAAA,YAAY,EAAEb,EADU;AAExBG,kBAAAA,MAAM,EAAE,MAAKG,KAAL,CAAWJ,oBAFK;AAGxBG,kBAAAA,OAAO,EAAE,MAAKC,KAAL,CAAWF;AAHI,iBAAf,CADK;AAAA;AAAA,uBAOWb,KAAK,CAAC,4BAAD,EAA+B;AAC7DgB,kBAAAA,MAAM,EAAE,MADqD;AAE7DG,kBAAAA,IAAI,EAAEA,IAFuD;AAG7DlB,kBAAAA,OAAO,EAAE;AACL,oCAAgB,kBADX;AAEL,iCAAaC,YAAY,CAACC,OAAb,CAAqB,UAArB;AAFR;AAHoD,iBAA/B,CAPhB;;AAAA;AAOZO,gBAAAA,cAPY;;AAelB,sBAAKZ,6BAAL;;AACA,sBAAKC,2BAAL;;AAhBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA1FH;;AAAA;AAAA;AAAA;AAAA;;AAAA,UA6GnB4B,aA7GmB,GA6GH,UAAClB,EAAD,EAAQ;AACpB,YAAKD,0BAAL,CAAgCC,EAAhC;;AACA,UAAImB,UAAU,GAAC,EAAf;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAG,MAAKd,KAAL,CAAWJ,oBAA5B,EAAkDkB,CAAC,EAAnD,EAAsD;AAClDD,QAAAA,UAAU,IAAE,IAAZ;AACH;;AACD,aAAOA,UAAP;AACH,KApHkB;;AAGf,UAAKb,KAAL,GAAa;AACTE,MAAAA,IAAI,EAAE,EADG;AAETZ,MAAAA,iBAAiB,EAAE,EAFV;AAGTE,MAAAA,eAAe,EAAE,EAHR;AAITI,MAAAA,oBAAoB,EAAEmB,SAJb;AAKTjB,MAAAA,qBAAqB,EAAE;AALd,KAAb;AAHe;AAUlB;;;;6BA4GQ;AAAA;;AAEL,aACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,EAEI;AAAI,QAAA,SAAS,EAAC,gCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFJ,EAGK,KAAKE,KAAL,CAAWV,iBAAX,CAA6B0B,MAA7B,KAAwC,CAAxC,IACG;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAJR,EAMI;AAAI,QAAA,SAAS,EAAC,mCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKhB,KAAL,CAAWV,iBAAX,CAA6B0B,MAA7B,GAAsC,CAAtC,IAA2C,KAAKhB,KAAL,CAAWV,iBAAX,CAA6B2B,GAA7B,CAAiC,UAAAC,gBAAgB,EAAI;AAC7F,YAAIC,KAAK,GAAG,CAAZ;AACA,eACI,oBAAC,yBAAD;AACI,UAAA,GAAG,EAAED,gBAAgB,CAACxB,EAAjB,aAAyByB,KAAK,IAAI,CAAlC,CADT;AAEI,UAAA,EAAE,EAAED,gBAAgB,CAACxB,EAFzB;AAGI,UAAA,KAAK,EAAEwB,gBAAgB,CAACE,KAH5B;AAII,UAAA,MAAM,EAAE,MAAI,CAACpB,KAAL,CAAWJ,oBAJvB;AAKI,UAAA,OAAO,EAAE,MAAI,CAACI,KAAL,CAAWF,qBALxB;AAMI,UAAA,YAAY,EAAE,MAAI,CAACW,YANvB;AAOI,UAAA,aAAa,EAAE,MAAI,CAACC,aAPxB;AAQI,UAAA,gBAAgB,EAAE;AAAA,mBAAM,MAAI,CAACP,gBAAL,CAAsBe,gBAAgB,CAACxB,EAAvC,CAAN;AAAA,WARtB;AASI,UAAA,mBAAmB,EAAE;AAAA,mBAAM,MAAI,CAACiB,mBAAL,CAAyBO,gBAAgB,CAACxB,EAA1C,CAAN;AAAA,WATzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,OAf2C,CADhD,CANJ,EAwBI;AAAI,QAAA,SAAS,EAAC,gCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAxBJ,EAyBK,KAAKM,KAAL,CAAWR,eAAX,CAA2BwB,MAA3B,KAAsC,CAAtC,IACG;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCA1BR,EA4BI;AAAI,QAAA,SAAS,EAAC,iCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKhB,KAAL,CAAWR,eAAX,CAA2BwB,MAA3B,GAAoC,CAApC,IAAyC,KAAKhB,KAAL,CAAWR,eAAX,CAA2ByB,GAA3B,CAA+B,UAAAtB,cAAc,EAAI;AACvF,YAAIwB,KAAK,GAAG,CAAZ;AACA,eACI,oBAAC,uBAAD;AACI,UAAA,GAAG,EAAExB,cAAc,CAACD,EAAf,aAAuByB,KAAK,IAAI,CAAhC,CADT;AAEI,UAAA,EAAE,EAAExB,cAAc,CAACD,EAFvB;AAGI,UAAA,KAAK,EAAEC,cAAc,CAACyB,KAH1B;AAII,UAAA,MAAM,EAAE,MAAI,CAACpB,KAAL,CAAWJ,oBAJvB;AAKI,UAAA,OAAO,EAAE,MAAI,CAACI,KAAL,CAAWF,qBALxB;AAMI,UAAA,gBAAgB,EAAE;AAAA,mBAAM,MAAI,CAACK,gBAAL,CAAsBR,cAAc,CAACD,EAArC,CAAN;AAAA,WANtB;AAOI,UAAA,WAAW,EAAE,MAAI,CAACkB,aAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,OAbyC,CAD9C,CA5BJ,CADJ;AA+CH;;;;EAxKiCpC,S;;AA2KtC,eAAeG,uBAAf","sourcesContent":["import React, { Component } from 'react';\nimport VolunteerComingExperience from '../VolunteerComingExperience';\nimport VolunteerPastExperience from '../VolunteerPastExperience';\nimport './style.css';\n\nclass VolunteerExperienceList extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            user: {},\n            comingExperiences: [],\n            pastExperiences: [],\n            pastExperienceRating: undefined,\n            pastExperienceComment: 'No comment added'\n        }\n    }\n\n    componentDidMount = async () => {\n        this.getUser();\n        this.getVolunteerComingExperiences();\n        this.getVolunteerPastExperiences();\n    }\n\n    getVolunteerComingExperiences = async () => {\n        const comingExperiences = await (await fetch('/api/volunteer/experiences/coming', {\n            headers: {\n                'jwt-token': localStorage.getItem('user-jwt')\n            }\n        })).json();\n        this.setState({\n            comingExperiences: comingExperiences\n        });\n    }\n\n    getVolunteerPastExperiences = async () => {\n        const pastExperiences = await (await fetch('/api/volunteer/experiences/past', {\n            headers: {\n                'jwt-token': localStorage.getItem('user-jwt')\n            }\n        })).json();\n        this.setState({\n            pastExperiences: pastExperiences\n        });\n    }\n\n    getVolunteerPastExperience = async(id) => {\n        const pastExperience = await (await fetch('/api/volunteer/experience/past', {\n            headers: {\n                'Content-Type': 'application/json',\n                'jwt-token': localStorage.getItem('user-jwt')\n            }\n        })).json();\n        this.setState({\n            pastExperienceRating: pastExperience.rating,\n            pastExperienceComment: pastExperience.comment ? pastExperience.comment : this.state.pastExperienceComment\n        })\n    }\n\n    getUser = async () => {\n        const user = await (await fetch('/api/volunteer', {\n            method: \"GET\",\n            headers: {\n                \"jwt-token\": localStorage.getItem('user-jwt')\n            }\n        })).json();\n        this.setState({\n            user: user\n        });\n    }\n\n    deleteExperience = async (id) => {\n        const deletedExperience = await fetch('/api/volunteer/experiences', {\n            method: \"DELETE\",\n            body: JSON.stringify({ experienceId: id }),\n            headers: {\n                'Content-Type': 'application/json',\n                'jwt-token': localStorage.getItem('user-jwt')\n            }\n        });\n        this.getVolunteerComingExperiences();\n        this.getVolunteerPastExperiences();\n    }\n\n    updateRating = (rating) => {\n        this.setState({\n            pastExperienceRating: rating,\n          });\n    }\n\n    updateComment = (comment) => {\n        this.setState({\n            pastExperienceComment: comment,\n        });\n    }\n\n    completedExperience = async (id) => {\n        const body = JSON.stringify({ \n            experienceId: id,\n            rating: this.state.pastExperienceRating,\n            comment: this.state.pastExperienceComment\n         });\n\n        const pastExperience = await fetch('/api/volunteer/experiences', {\n            method: \"POST\",\n            body: body,\n            headers: {\n                'Content-Type': 'application/json',\n                'jwt-token': localStorage.getItem('user-jwt')\n            }\n        });\n        this.getVolunteerComingExperiences();\n        this.getVolunteerPastExperiences();\n    }\n\n    getstarRating = (id) => {\n        this.getVolunteerPastExperience(id);\n        let starRating='';\n        for(let i=0; i<= this.state.pastExperienceRating; i++){\n            starRating+='⭐️'\n        }\n        return starRating;\n    }\n\n    render() {\n        \n        return (\n            <div className=\"volunteer-experiences\">\n                <h2 className=\"volunteer-experiences-title\">My Volunteering Experiences</h2>\n                <h3 className=\"volunteer-experiences-subtitle\">Coming experiences:</h3>\n                {this.state.comingExperiences.length === 0 && (\n                    <p className=\"no-message\">No coming experiences recorded!</p>\n                )}\n                <ul className=\"volunteer-coming-experiences-list\">\n                    {this.state.comingExperiences.length > 0 && this.state.comingExperiences.map(comingExperience => {\n                        let count = 0;\n                        return (\n                            <VolunteerComingExperience\n                                key={comingExperience.id - `${count += 1}`}\n                                id={comingExperience.id}\n                                title={comingExperience.title}\n                                rating={this.state.pastExperienceRating}\n                                comment={this.state.pastExperienceComment}\n                                updateRating={this.updateRating}\n                                updateComment={this.updateComment}\n                                deleteExperience={() => this.deleteExperience(comingExperience.id)}\n                                completedExperience={() => this.completedExperience(comingExperience.id)}\n                            />\n                        )\n                    })}\n                </ul>\n                <h3 className=\"volunteer-experiences-subtitle\">Past experiences:</h3>\n                {this.state.pastExperiences.length === 0 && (\n                    <p className=\"no-message\">No past experiences recorded!</p>\n                )}\n                <ul className=\"volunteer-past-experiences-list\">\n                    {this.state.pastExperiences.length > 0 && this.state.pastExperiences.map(pastExperience => {\n                        let count = 0;\n                        return (\n                            <VolunteerPastExperience\n                                key={pastExperience.id - `${count += 1}`}\n                                id={pastExperience.id}\n                                title={pastExperience.title}\n                                rating={this.state.pastExperienceRating}\n                                comment={this.state.pastExperienceComment}\n                                deleteExperience={() => this.deleteExperience(pastExperience.id)}\n                                ratingStars={this.getstarRating}\n                            />\n                        )\n                    })}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default VolunteerExperienceList;\n"]},"metadata":{},"sourceType":"module"}