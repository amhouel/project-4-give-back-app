{"ast":null,"code":"import _regeneratorRuntime from \"/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/src/VolunteerExperienceList/index.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport VolunteerComingExperience from '../VolunteerComingExperience';\nimport VolunteerPastExperience from '../VolunteerPastExperience';\nimport VolunteerExperienceDetails from '../VolunteerExperienceDetails';\nimport './style.css';\n\nvar VolunteerExperienceList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(VolunteerExperienceList, _Component);\n\n  function VolunteerExperienceList(props) {\n    var _this;\n\n    _classCallCheck(this, VolunteerExperienceList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VolunteerExperienceList).call(this, props));\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.fetchUser();\n\n              _this.fetchVolunteerComingExperiences();\n\n              _this.fetchVolunteerPastExperiences();\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.fetchVolunteerComingExperiences =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var comingExperiences;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch('/api/volunteer/experiences/coming', {\n                headers: {\n                  'jwt-token': _this.state.token\n                }\n              });\n\n            case 2:\n              _context2.next = 4;\n              return _context2.sent.json();\n\n            case 4:\n              comingExperiences = _context2.sent;\n\n              _this.setState({\n                comingExperiences: comingExperiences\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    _this.fetchVolunteerPastExperiences =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var pastExperiences;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return fetch('/api/volunteer/experiences/past', {\n                headers: {\n                  'jwt-token': _this.state.token\n                }\n              });\n\n            case 2:\n              _context3.next = 4;\n              return _context3.sent.json();\n\n            case 4:\n              pastExperiences = _context3.sent;\n\n              _this.setState({\n                pastExperiences: pastExperiences\n              });\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n    _this.fetchUser =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var user;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return fetch('/api/volunteer', {\n                method: \"GET\",\n                headers: {\n                  \"jwt-token\": _this.state.token\n                }\n              });\n\n            case 2:\n              _context4.next = 4;\n              return _context4.sent.json();\n\n            case 4:\n              user = _context4.sent;\n\n              _this.setState({\n                user: user\n              });\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n\n    _this.deleteExperience =\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(id) {\n        var deletedExperience;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return fetch('/api/volunteer/experiences', {\n                  method: \"DELETE\",\n                  body: JSON.stringify({\n                    experienceId: id\n                  }),\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'jwt-token': _this.state.token\n                  }\n                });\n\n              case 2:\n                deletedExperience = _context5.sent;\n\n                _this.fetchVolunteerComingExperiences();\n\n                _this.fetchVolunteerPastExperiences();\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function (_x) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    _this.updateRating = function (rating) {\n      _this.setState({\n        pastExperienceRating: rating\n      });\n    };\n\n    _this.updateComment = function (comment) {\n      _this.setState({\n        pastExperienceComment: comment\n      });\n    };\n\n    _this.completedExperience =\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(id) {\n        var body, pastExperience;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                body = JSON.stringify({\n                  experienceId: id,\n                  rating: _this.state.pastExperienceRating,\n                  comment: _this.state.pastExperienceComment\n                });\n                _context6.next = 3;\n                return fetch('/api/volunteer/experiences', {\n                  method: \"POST\",\n                  body: body,\n                  headers: {\n                    'Content-Type': 'application/json',\n                    'jwt-token': _this.state.token\n                  }\n                });\n\n              case 3:\n                pastExperience = _context6.sent;\n\n                _this.fetchVolunteerComingExperiences();\n\n                _this.fetchVolunteerPastExperiences();\n\n              case 6:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      return function (_x2) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      token: localStorage.getItem('user-jwt'),\n      user: {},\n      comingExperiences: [],\n      pastExperiences: [],\n      pastExperienceRating: undefined,\n      pastExperienceComment: ''\n    };\n    return _this;\n  }\n\n  _createClass(VolunteerExperienceList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"volunteer-experiences\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"volunteer-experiences-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"My Volunteering Experiences\"), React.createElement(\"h3\", {\n        className: \"volunteer-experiences-subtitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Coming experiences:\"), this.state.comingExperiences.length === 0 && React.createElement(\"p\", {\n        className: \"no-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"No coming experiences recorded!\"), React.createElement(\"ul\", {\n        className: \"volunteer-coming-experiences-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.state.comingExperiences.length > 0 && this.state.comingExperiences.map(function (comingExperience) {\n        var count = 0;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(VolunteerComingExperience, {\n          key: comingExperience.id - \"\".concat(count += 1),\n          id: comingExperience.id,\n          title: comingExperience.title,\n          rating: _this2.state.pastExperienceRating,\n          comment: _this2.state.pastExperienceComment,\n          updateRating: _this2.updateRating,\n          updateComment: _this2.updateComment,\n          deleteExperience: function deleteExperience() {\n            return _this2.deleteExperience(comingExperience.id);\n          },\n          completedExperience: function completedExperience() {\n            return _this2.completedExperience(comingExperience.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/volunteer/experiences/\".concat(comingExperience.id),\n          extact: true,\n          render: function render(props) {\n            return React.createElement(VolunteerExperienceDetails, Object.assign({}, props, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 133\n              },\n              __self: this\n            }));\n          } // component={VolunteerExperienceDetails}\n          // updateComment={this.updateComment}\n          // updateRating={this.updateRating}\n          // completedExperience={() => this.completedExperience(comingExperience.id)}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }));\n      })), React.createElement(\"h3\", {\n        className: \"volunteer-experiences-subtitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Past experiences:\"), this.state.pastExperiences.length === 0 && React.createElement(\"p\", {\n        className: \"no-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"No past experiences recorded!\"), React.createElement(\"ul\", {\n        className: \"volunteer-past-experiences-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, this.state.pastExperiences.length > 0 && this.state.pastExperiences.map(function (pastExperience) {\n        var count = 0;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, React.createElement(VolunteerPastExperience, {\n          key: pastExperience.id - \"\".concat(count += 1),\n          id: pastExperience.id,\n          title: pastExperience.title,\n          deleteExperience: function deleteExperience() {\n            return _this2.deleteExperience(pastExperience.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/volunteer/experiences/\".concat(pastExperience.id),\n          extact: true,\n          render: function render(props) {\n            return React.createElement(VolunteerExperienceDetails, Object.assign({}, props, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 160\n              },\n              __self: this\n            }));\n          } // component={VolunteerExperienceDetails}\n          // updateComment={this.updateComment}\n          // updateRating={this.updateRating}\n          // completedExperience={() => this.completedExperience(comingExperience.id)}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return VolunteerExperienceList;\n}(Component);\n\nexport default VolunteerExperienceList;","map":{"version":3,"sources":["/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/src/VolunteerExperienceList/index.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","VolunteerComingExperience","VolunteerPastExperience","VolunteerExperienceDetails","VolunteerExperienceList","props","componentDidMount","fetchUser","fetchVolunteerComingExperiences","fetchVolunteerPastExperiences","fetch","headers","state","token","json","comingExperiences","setState","pastExperiences","method","user","deleteExperience","id","body","JSON","stringify","experienceId","deletedExperience","updateRating","rating","pastExperienceRating","updateComment","comment","pastExperienceComment","completedExperience","pastExperience","localStorage","getItem","undefined","length","map","comingExperience","count","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport VolunteerComingExperience from '../VolunteerComingExperience';\nimport VolunteerPastExperience from '../VolunteerPastExperience';\nimport VolunteerExperienceDetails from '../VolunteerExperienceDetails'\nimport './style.css';\n\nclass VolunteerExperienceList extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            token: localStorage.getItem('user-jwt'),\n            user: {},\n            comingExperiences: [],\n            pastExperiences: [],\n            pastExperienceRating: undefined,\n            pastExperienceComment: ''\n        }\n    }\n\n    componentDidMount = async () => {\n        this.fetchUser();\n        this.fetchVolunteerComingExperiences();\n        this.fetchVolunteerPastExperiences();\n    }\n\n    fetchVolunteerComingExperiences = async () => {\n        const comingExperiences = await (await fetch('/api/volunteer/experiences/coming', {\n            headers: {\n                'jwt-token': this.state.token\n            }\n        })).json();\n        this.setState({\n            comingExperiences: comingExperiences\n        });\n    }\n\n    fetchVolunteerPastExperiences = async () => {\n        const pastExperiences = await (await fetch('/api/volunteer/experiences/past', {\n            headers: {\n                'jwt-token': this.state.token\n            }\n        })).json();\n        this.setState({\n            pastExperiences: pastExperiences\n        });\n    }\n\n    fetchUser = async () => {\n        const user = await (await fetch('/api/volunteer', {\n            method: \"GET\",\n            headers: {\n                \"jwt-token\": this.state.token\n            }\n        })).json();\n        this.setState({\n            user: user\n        });\n    }\n\n    deleteExperience = async (id) => {\n        const deletedExperience = await fetch('/api/volunteer/experiences', {\n            method: \"DELETE\",\n            body: JSON.stringify({ experienceId: id }),\n            headers: {\n                'Content-Type': 'application/json',\n                'jwt-token': this.state.token\n            }\n        });\n        this.fetchVolunteerComingExperiences();\n        this.fetchVolunteerPastExperiences();\n    }\n\n    updateRating = (rating) => {\n        this.setState({\n            pastExperienceRating: rating,\n        });\n    }\n\n    updateComment = (comment) => {\n        this.setState({\n            pastExperienceComment: comment,\n        });\n    }\n\n    completedExperience = async (id) => {\n        const body = JSON.stringify({\n            experienceId: id,\n            rating: this.state.pastExperienceRating,\n            comment: this.state.pastExperienceComment\n        });\n\n        const pastExperience = await fetch('/api/volunteer/experiences', {\n            method: \"POST\",\n            body: body,\n            headers: {\n                'Content-Type': 'application/json',\n                'jwt-token': this.state.token\n            }\n        });\n        this.fetchVolunteerComingExperiences();\n        this.fetchVolunteerPastExperiences();\n    }\n\n    render() {\n\n        return (\n            <div className=\"volunteer-experiences\">\n                <h2 className=\"volunteer-experiences-title\">My Volunteering Experiences</h2>\n                <h3 className=\"volunteer-experiences-subtitle\">Coming experiences:</h3>\n                {this.state.comingExperiences.length === 0 && (\n                    <p className=\"no-message\">No coming experiences recorded!</p>\n                )}\n                <ul className=\"volunteer-coming-experiences-list\">\n                    {this.state.comingExperiences.length > 0 && this.state.comingExperiences.map(comingExperience => {\n                        let count = 0;\n                        return (\n                            <div>\n                                <VolunteerComingExperience\n                                    key={comingExperience.id - `${count += 1}`}\n                                    id={comingExperience.id}\n                                    title={comingExperience.title}\n                                    rating={this.state.pastExperienceRating}\n                                    comment={this.state.pastExperienceComment}\n                                    updateRating={this.updateRating}\n                                    updateComment={this.updateComment}\n                                    deleteExperience={() => this.deleteExperience(comingExperience.id)}\n                                    completedExperience={() => this.completedExperience(comingExperience.id)}\n                                />\n                                <Route\n                                    path={`/volunteer/experiences/${comingExperience.id}`} extact\n                                    render={(props) => <VolunteerExperienceDetails {...props} />}\n                                // component={VolunteerExperienceDetails}\n                                // updateComment={this.updateComment}\n                                // updateRating={this.updateRating}\n                                // completedExperience={() => this.completedExperience(comingExperience.id)}\n                                />\n                            </div>\n                        )\n                    })}\n                </ul>\n                <h3 className=\"volunteer-experiences-subtitle\">Past experiences:</h3>\n                {this.state.pastExperiences.length === 0 && (\n                    <p className=\"no-message\">No past experiences recorded!</p>\n                )}\n                <ul className=\"volunteer-past-experiences-list\">\n                    {this.state.pastExperiences.length > 0 && this.state.pastExperiences.map(pastExperience => {\n                        let count = 0;\n                        return (\n                            <div>\n                                <VolunteerPastExperience\n                                    key={pastExperience.id - `${count += 1}`}\n                                    id={pastExperience.id}\n                                    title={pastExperience.title}\n                                    deleteExperience={() => this.deleteExperience(pastExperience.id)}\n                                />\n                                <Route\n                                    path={`/volunteer/experiences/${pastExperience.id}`} extact\n                                    render={(props) => <VolunteerExperienceDetails {...props} />}\n                                // component={VolunteerExperienceDetails}\n                                // updateComment={this.updateComment}\n                                // updateRating={this.updateRating}\n                                // completedExperience={() => this.completedExperience(comingExperience.id)}\n                                />\n                            </div>\n                        )\n                    })}\n                </ul>\n\n            </div>\n        )\n    }\n}\n\nexport default VolunteerExperienceList;\n"]},"metadata":{},"sourceType":"module"}