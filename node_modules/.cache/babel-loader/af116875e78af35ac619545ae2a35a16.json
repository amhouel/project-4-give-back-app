{"ast":null,"code":"import _defineProperty from \"/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/src/VolunteerUpdateForm/index.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\nimport SearchNav from '../SearchNav';\nimport './style.css';\n\nvar VolunteerUpdateForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(VolunteerUpdateForm, _Component);\n\n  function VolunteerUpdateForm(props) {\n    var _this;\n\n    _classCallCheck(this, VolunteerUpdateForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VolunteerUpdateForm).call(this, props));\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.fetchUser();\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.fetchUser =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var user;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch('/api/volunteer', {\n                method: \"GET\",\n                headers: {\n                  \"jwt-token\": localStorage.getItem('user-jwt')\n                }\n              });\n\n            case 2:\n              _context2.next = 4;\n              return _context2.sent.json();\n\n            case 4:\n              user = _context2.sent;\n\n              _this.setState({\n                user: user\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    _this.updateInput = function (event) {\n      event.preventDefault();\n\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.updateFile = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        profilePicture: event.target.files[0]\n      });\n    };\n\n    _this.isValid = function (event) {\n      event.preventDefault();\n\n      if (_this.state.profilePicture) {\n        _this.uploadFile();\n      }\n\n      var isValid = false;\n      var emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      var specialCharacterPattern = /[!@()#$%&'*+/=?^_`{|}~-]+/;\n      var numberPattern = /\\d/;\n      var emailMessageText;\n      var passwordMessageText;\n\n      if (_this.state.email && !emailRegex.exec(_this.state.email)) {\n        isValid = false;\n        emailMessageText = 'Email address is invalid!';\n      }\n\n      if (_this.state.password && (_this.state.password.length < 7 || !specialCharacterPattern.exec(_this.state.password) || !numberPattern.exec(_this.state.password))) {\n        isValid = false;\n        passwordMessageText = 'Password is invalid! Password must be at least 7 characters long and include at least one number and one special character';\n      }\n\n      isValid = true;\n\n      _this.setState({\n        valid: isValid,\n        emailMessage: emailMessageText,\n        passwordMessage: passwordMessageText\n      });\n    };\n\n    _this.uploadFile =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return fetch(\"https://api.cloudinary.com/v1_1/amhouel/upload&public_id=\".concat(_this.state.profilePicture.name, \"-\").concat(_this.state.user.username), {\n                method: \"POST\",\n                headers: {\n                  'Content-Type': 'multipart/form-data',\n                  'upload_preset': 'zm0ff4bo',\n                  'file': \"\".concat(_this.state.profilePicture)\n                }\n              });\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    _this.update =\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(event) {\n        var body;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                event.preventDefault();\n                body = JSON.stringify({\n                  fullName: _this.state.fullName,\n                  dob: _this.state.dob,\n                  address: _this.state.address,\n                  profilePicture: \"\".concat(_this.state.profilePicture.name, \"-\").concat(_this.state.user.username),\n                  email: _this.state.email,\n                  password: _this.state.password\n                });\n                _context4.next = 4;\n                return fetch('/api/volunteer', {\n                  method: \"PUT\",\n                  body: body,\n                  headers: {\n                    'jwt-token': localStorage.getItem('user-jwt'),\n                    'Content-Type': 'application/json'\n                  }\n                });\n\n              case 4:\n                _this.fetchUser();\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      user: {},\n      valid: false,\n      fullName: '',\n      dob: '',\n      address: '',\n      profilePicture: '',\n      email: '',\n      password: '',\n      emailMessage: '',\n      passwordMessage: ''\n    };\n    return _this;\n  }\n\n  _createClass(VolunteerUpdateForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state$user = this.state.user,\n          fullName = _this$state$user.fullName,\n          address = _this$state$user.address,\n          email = _this$state$user.email,\n          profilePicture = _this$state$user.profilePicture;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"volunteer-update-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Update you profile \", this.state.user.fullName), React.createElement(\"div\", {\n        className: \"update-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"update-form\",\n        onSubmit: this.isValid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"full-name-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Full Name:\"), React.createElement(\"input\", {\n        className: \"full-name-input\",\n        type: \"text\",\n        placeholder: fullName,\n        name: \"fullName\",\n        value: this.state.fullName,\n        onChange: this.updateInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"dob-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Date of Birth:\"), React.createElement(\"input\", {\n        type: \"date\",\n        name: \"dob\",\n        value: this.state.dob,\n        onChange: this.updateInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"address-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Address:\"), React.createElement(\"input\", {\n        className: \"address-input\",\n        type: \"text\",\n        name: \"address\",\n        placeholder: address,\n        value: this.state.address,\n        onChange: this.updateInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"email-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Email:\"), React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: email,\n        value: this.state.email,\n        onChange: this.updateInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"validation-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, this.state.emailMessage), React.createElement(\"label\", {\n        className: \"profile-picture-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Profile Picture:\"), React.createElement(\"input\", {\n        type: \"file\",\n        name: \"profilePicture\",\n        placeholder: profilePicture,\n        onChange: this.updateFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"password-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Password:\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"New Password\",\n        value: this.state.password,\n        onChange: this.updateInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"validation-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, this.state.passwordMessage)), !this.state.valid && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ok-button\",\n        onClick: this.isValid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Ok\"), React.createElement(\"button\", {\n        className: \"cancel-update-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"cancel-link\",\n        to: \"/volunteer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Cancel\"))), this.state.valid && React.createElement(\"button\", {\n        className: \"update-button\",\n        onClick: this.update,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"update-link\",\n        to: \"/volunteer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Update Profile\"))));\n    }\n  }]);\n\n  return VolunteerUpdateForm;\n}(Component);\n\nexport default VolunteerUpdateForm;","map":{"version":3,"sources":["/Users/amhouel/wdi/unit04/projects/project-4-give-back-app/src/VolunteerUpdateForm/index.js"],"names":["React","Component","BrowserRouter","Router","Link","Route","SearchNav","VolunteerUpdateForm","props","componentDidMount","fetchUser","fetch","method","headers","localStorage","getItem","json","user","setState","updateInput","event","preventDefault","target","name","value","updateFile","profilePicture","files","isValid","state","uploadFile","emailRegex","specialCharacterPattern","numberPattern","emailMessageText","passwordMessageText","email","exec","password","length","valid","emailMessage","passwordMessage","username","update","body","JSON","stringify","fullName","dob","address"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\nimport SearchNav from '../SearchNav';\nimport './style.css';\n\nclass VolunteerUpdateForm extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      user: {},\n      valid: false,\n      fullName: '',\n      dob: '',\n      address: '',\n      profilePicture: '',\n      email: '',\n      password: '',\n      emailMessage: '',\n      passwordMessage: ''\n    }\n  }\n\n  componentDidMount = async () => {\n    this.fetchUser();\n  }\n\n  fetchUser = async () => {\n    const user = await (await fetch('/api/volunteer', {\n      method: \"GET\",\n      headers: {\n        \"jwt-token\": localStorage.getItem('user-jwt')\n      }\n    })).json();\n    this.setState({\n      user: user\n    });\n  }\n\n  updateInput = event => {\n    event.preventDefault();\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  // Code from \"React Image Upload Made Easy\" Youtube video\n  updateFile = event => {\n    event.preventDefault();\n    this.setState({\n      profilePicture: event.target.files[0]\n    });\n  }\n\n  isValid = event => {\n    event.preventDefault();\n\n    if (this.state.profilePicture) {\n      this.uploadFile();\n    }\n\n    let isValid = false;\n    let emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    let specialCharacterPattern = /[!@()#$%&'*+/=?^_`{|}~-]+/;\n    let numberPattern = /\\d/;\n    let emailMessageText;\n    let passwordMessageText;\n\n    if (this.state.email && !emailRegex.exec(this.state.email)) {\n      isValid = false;\n      emailMessageText = 'Email address is invalid!';\n    }\n    if (this.state.password && (this.state.password.length < 7 || !specialCharacterPattern.exec(this.state.password) || !numberPattern.exec(this.state.password))) {\n      isValid = false;\n      passwordMessageText = 'Password is invalid! Password must be at least 7 characters long and include at least one number and one special character';\n    }\n\n    isValid = true;\n\n    this.setState({\n      valid: isValid,\n      emailMessage: emailMessageText,\n      passwordMessage: passwordMessageText\n    });\n  }\n\n  //Code from \"HTML5 upload (xhr) to Cloudinary\" Codepen\n  uploadFile = async () => {\n    await fetch(`https://api.cloudinary.com/v1_1/amhouel/upload&public_id=${this.state.profilePicture.name}-${this.state.user.username}`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'upload_preset': 'zm0ff4bo',\n        'file': `${this.state.profilePicture}`,\n      },\n      \n\n    });\n    // const xhr = new XMLHttpRequest();\n    // const fd = new FormData();\n    // // await xhr.open('POST', url, true);\n    // // xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    // fd.append();\n    // fd.append();\n    // fd.append('public_id', `${this.state.profilePicture.name}-${this.state.user.username}`);\n    // request.send(fd);\n  }\n\n  update = async (event) => {\n    event.preventDefault();\n    const body = JSON.stringify({\n      fullName: this.state.fullName,\n      dob: this.state.dob,\n      address: this.state.address,\n      profilePicture: `${this.state.profilePicture.name}-${this.state.user.username}`,\n      email: this.state.email,\n      password: this.state.password\n    });\n    await fetch('/api/volunteer', {\n      method: \"PUT\",\n      body: body,\n      headers: {\n        'jwt-token': localStorage.getItem('user-jwt'),\n        'Content-Type': 'application/json'\n      }\n    });\n    this.fetchUser();\n  }\n\n  render() {\n    const { fullName, address, email, profilePicture } = this.state.user;\n    return (\n      <div>\n        <h2 className=\"volunteer-update-title\">Update you profile {this.state.user.fullName}</h2>\n        <div className=\"update-wrapper\">\n          <form className=\"update-form\" onSubmit={this.isValid}>\n            <label className=\"full-name-label\">Full Name:</label>\n            <input className=\"full-name-input\" type=\"text\" placeholder={fullName} name=\"fullName\" value={this.state.fullName} onChange={this.updateInput} />\n            <label className=\"dob-label\">Date of Birth:</label>\n            <input type=\"date\" name=\"dob\" value={this.state.dob} onChange={this.updateInput} />\n            <label className=\"address-label\">Address:</label>\n            <input className=\"address-input\" type=\"text\" name=\"address\" placeholder={address} value={this.state.address} onChange={this.updateInput} />\n            <label className=\"email-label\">Email:</label>\n            <input type=\"email\" name=\"email\" placeholder={email} value={this.state.email} onChange={this.updateInput} />\n            <p className=\"validation-message\">{this.state.emailMessage}</p>\n            <label className=\"profile-picture-label\">Profile Picture:</label>\n            <input type=\"file\" name=\"profilePicture\" placeholder={profilePicture} onChange={this.updateFile} />\n            <label className=\"password-label\">Password:</label>\n            <input type=\"password\" name=\"password\" placeholder=\"New Password\" value={this.state.password} onChange={this.updateInput} />\n            <p className=\"validation-message\">{this.state.passwordMessage}</p>\n          </form>\n          {!this.state.valid && (\n            <div>\n              <button className=\"ok-button\" onClick={this.isValid}>Ok</button>\n              <button className=\"cancel-update-button\"><Link className=\"cancel-link\" to='/volunteer'>Cancel</Link></button>\n            </div>\n          )}\n          {this.state.valid && (\n            <button className=\"update-button\" onClick={this.update}><Link className=\"update-link\" to='/volunteer'>Update Profile</Link></button>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default VolunteerUpdateForm;"]},"metadata":{},"sourceType":"module"}